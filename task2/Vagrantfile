#Reading DNS Settings
SERVERS_COUNT = 2
PROJECT_FOLDER = "task2"
EXPOSED_PORT = 35601

server_options = {
  "httpd" => {
      "name"=>"httpd",
      "ip"=>"72.22.0.#{SERVERS_COUNT+2}",
      "share"=>{
        "from"=>"./shared/",
        "to"=>"/shared"
      }
    },
  "tomcat" => {
      "name_prefix"=>"tomcat",
      "ip_prefix"=>"72.22.0."
  }
}
#workers collections
workers_names = []
worker_ips = []
#provision for all VMs
common_provision =  <<SCRIPT
yum update -y
systemctl stop firewalld
SCRIPT
#building httpd.conf update
httpd_conf_config ="\nLoadModule jk_module modules/mod_jk.so
JkWorkersFile conf/workers.properties
JkShmFile /tmp/shm
JkLogFile logs/mod_jk.log
JkLogLevel info
JkMount /#{PROJECT_FOLDER}* lb"

# VM configs
VAGRANTFILE_API_VERSION = "2"
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  #Centos based
  config.vm.box = "centos/7"
  config.vm.provision "shell",
    inline: common_provision
  #configuring tomcts
  [*1..SERVERS_COUNT].each do |index|
    dns_name = "#{server_options["tomcat"]["name_prefix"]}#{index}"
    ip = "#{server_options["tomcat"]["ip_prefix"]}#{index+1}"
    #add data to list for future configuring
    workers_names << dns_name
    worker_ips << ip
    #creating vm
    config.vm.define dns_name do |server|
      server.vm.hostname = dns_name
      server.vm.network "private_network", ip: ip
      if server_options["tomcat"].has_key?("share") then
        server.vm.synced_folder server_options["tomcat"]["share"]["from"], server_options["tomcat"]["share"]["to"]
      end
      #creaiong provision script
      script = <<SCRIPT
        yum install -y java-1.8.0-openjdk
        yum install -y tomcat tomcat-webapps tomcat-admin-webapps
        mkdir /usr/share/tomcat/webapps/#{PROJECT_FOLDER}
        echo "<h3>Tomcat #{index} welcomes you!</h3>" > /usr/share/tomcat/webapps/#{PROJECT_FOLDER}/index.html
        systemctl enable tomcat
        systemctl start tomcat
SCRIPT
      #add some configs
      server.vm.provision "shell",
        inline: script
    end
  end
  #building balancer mapping file
  wokers_hosts = workers_names.join(",")
  properties_list = "worker.list=lb\n";
  properties_list << "worker.lb.type=lb\n"
  properties_list << "worker.lb.balance_workers=#{wokers_hosts}\n"
  [*1..SERVERS_COUNT].each do |index|
      properties_list << "worker.#{workers_names[index-1]}.host=#{worker_ips[index-1]}\n"
      properties_list << "worker.#{workers_names[index-1]}.port=8009\n"
      properties_list << "worker.#{workers_names[index-1]}.type=ajp13\n"

  end
  #creaiong provision script for httpd
  script_httpd = <<SCRIPT
  yum install -y httpd
  cp /shared/mod_jk.so /etc/httpd/modules/
  echo "#{properties_list}" > /etc/httpd/conf/workers.properties
  echo "#{httpd_conf_config}" >> /etc/httpd/conf/httpd.conf
  systemctl enable httpd
  systemctl start httpd
SCRIPT
  #configuring httpd
  config.vm.define server_options["httpd"]["name"] do |server|
    server.vm.hostname = server_options["httpd"]["name"]
    server.vm.network "private_network", ip: server_options["httpd"]["ip"]
    server.vm.network "forwarded_port", guest: 80, host: EXPOSED_PORT
    if server_options["httpd"].has_key?("share") then
      server.vm.synced_folder server_options["httpd"]["share"]["from"], server_options["httpd"]["share"]["to"]
    end
    server.vm.provision "shell",
      inline: script_httpd
  end
end
